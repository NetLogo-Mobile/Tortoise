MiniCsvExtensionStrings
  O> random-seed 5768
  extensions [csv]
  globals [temp]
  csv:from-string "" => []
  csv:to-string [] => ""
  csv:from-string "apples,oranges,1,2" => [["apples" "oranges" 1 2]]
  (csv:from-string "apples|oranges|1|2" "|") => [["apples" "oranges" 1 2]]
  csv:to-string [[ "apples" "oranges" 1 2 ]] => "apples,oranges,1,2"
  (csv:to-string [[ "apples" "oranges,too" 1 2 ]] "|") => "apples|oranges,too|1|2"
  csv:to-string [[ "apples" "oranges" 1 2 ] [ "fresas, pepinos" "uvas\nuvas" 3 4 ]] => "apples,oranges,1,2\n\"fresas, pepinos\",\"uvas\nuvas\",3,4"
  O> create-turtles 3 [ fd 20 set label "hi, how are ya?" ]
  csv:to-string (list (sort turtles) ) => "(turtle 0),(turtle 1),(turtle 2)"
  O> set temp [ (list who pxcor pycor color label) ] of turtles
  csv:to-string temp => "1,-3,-2,85,\"hi, how are ya?\"\n0,-4,2,85,\"hi, how are ya?\"\n2,-5,3,65,\"hi, how are ya?\""
  csv:from-string csv:to-string temp => [[1 -3 -2 85 "hi, how are ya?"] [0 -4 2 85 "hi, how are ya?"] [2 -5 3 65 "hi, how are ya?"]]
  csv:to-string [ [ [0 1 2] [3 4 5] ] [ [6 7 8] [9 0 1] ] [ [2 3 4] [5 6 7] ] ] => "[0 1 2],[3 4 5]\n[6 7 8],[9 0 1]\n[2 3 4],[5 6 7]"
  O> set temp csv:from-string "[0 1 2],[3 4 5]\n[6 7 8],[9 0 1]\n[2 3 4],[5 6 7]"
  temp => [["[0 1 2]" "[3 4 5]"] ["[6 7 8]" "[9 0 1]"] ["[2 3 4]" "[5 6 7]"]]
  map [ row -> map [ cell -> read-from-string cell ] row ] temp => [[[0 1 2] [3 4 5]] [[6 7 8] [9 0 1]] [[2 3 4] [5 6 7]]]

MiniCsvExtensionRows
  O> random-seed 5768
  extensions [csv]
  globals [temp]
  csv:from-row "" => [""]
  csv:to-row [] => ""
  csv:from-row "14,10,-2" => [14 10 -2]
  (csv:from-row "14|10|-2" "|") => [14 10 -2]
  csv:to-row [14 10 "delim,here"] => "14,10,\"delim,here\""
  (csv:to-row [14 10 "delim,here"] "|") => "14|10|delim,here"
  O> create-turtles 3 [ fd 20 set label "hi, how are ya?" ]
  O> set temp [ pxcor ] of turtles
  csv:to-row temp => "-3,-4,-5"
  csv:from-row csv:to-row temp => [-3 -4 -5]

from-row-simple
  extensions [ csv ]
  csv:from-row "1,2,3" => [1 2 3]

from-row-empty
  extensions [ csv ]
  csv:from-row "" => [""]
  csv:from-row "   " => ["   "]

from-row-nested-quotes
  extensions [ csv ]
  csv:from-row "\"\"\"quoted string\"\"\",\"inner\"\"quote\",\"escaped\\\"\"quote\"" => ["\"quoted string\"" "inner\"quote" "escaped\\\"quote"]

from-row-custom-delimiter
  extensions [ csv ]
  (csv:from-row "1\t2\t3" "\t") => [1 2 3]
  (csv:from-row "1;2,3" ";") => [1 "2,3"]

from-row-literal-support
  extensions [ csv ]
  csv:from-row "true,1,1e3,-1.100,false,FALSE,False" => [true 1 1000 -1.1 false false false]

from-string
  extensions [ csv ]
  csv:from-string "1,2,3\n3,4,5" => [[1 2 3] [3 4 5]]
  csv:from-string "1,2,\"3\n4\"\n5,6,7" => [[1 2 "3\n4"] [5 6 7]]
  csv:from-string "1a." => [["1a."]]
  csv:from-string "0x23" => [["0x23"]]
  (csv:from-string "1a." "|") => [["1a."]]
  (csv:from-string "1a." "/") => [["1a."]]

from-string-empty
  extensions [ csv ]
  csv:from-string "" => []

from-file
  extensions [ csv ]
  csv:from-file "extensions/csv/test/idontexist.csv" => ERROR Extension exception: Reading directly from a file is not supported in NetLogo Web.  Instead you can use the Fetch extension to asynchronously read in a text file.\n\nfetch:user-file-async [ file-contents -> show csv:from-string file-contents ]

to-row
  extensions [ csv ]
  csv:to-row [] => ""
  csv:to-row [1 2 3] => "1,2,3"
  csv:to-row ["one" "two" "three"] => "one,two,three"
  csv:to-row [1 "two" "three,four"] => "1,two,\"three,four\""
  (csv:to-row [1 2 3] "\t") => "1\t2\t3"
  csv:to-row ["foo\"oo"] => "foo\"oo"
  csv:to-row ["  \"foo\"  "] => "  \"foo\"  "
  csv:to-row ["\"foo"] => "\"foo"
  csv:to-row ["foo\""] => "foo\""
  csv:to-row ["\"foo\""] => "\"\"\"foo\"\"\""

to-string
  extensions [ csv ]
  csv:to-string [[1 2 3]] => "1,2,3"
  csv:to-string [[1 2 3][4 5 6]] => "1,2,3\n4,5,6"

to-file
  extensions [ csv ]
  O> csv:to-file "extensions/csv/test/tmp.csv" [[1 2 3][4 5 6]] => ERROR Extension exception: Writing directly to a file is not supported in NetLogo Web.  Instead you can use the SendTo extension to download a text file of the user's choice.\n\nsend-to:file "output.csv" csv:to-string [[0 1 true "hello"][1 10 false "goodbye"][2 5 true "..."]]
  O> (csv:to-file "extensions/csv/test/tmp.csv" [[1 2 3][4 5 6]] ";") => ERROR Extension exception: Writing directly to a file is not supported in NetLogo Web.  Instead you can use the SendTo extension to download a text file of the user's choice.\n\nsend-to:file "output.csv" csv:to-string [[0 1 true "hello"][1 10 false "goodbye"][2 5 true "..."]]

to-string-errors-on-non-list
  extensions [ csv ]
  csv:to-string [[1 2 3] 4 [5 6 7]] => ERROR Extension exception: Expected a list of lists, but 4 was one of the elements.

to-file-error-on-non-list
  extensions [ csv ]
  O> csv:to-file "incomplete.csv" [[1 2 3] 4 [5 6 7]] => ERROR Extension exception: Writing directly to a file is not supported in NetLogo Web.  Instead you can use the SendTo extension to download a text file of the user's choice.\n\nsend-to:file "output.csv" csv:to-string [[0 1 true "hello"][1 10 false "goodbye"][2 5 true "..."]]

to-file-partially-written-if-error
  extensions [ csv ]
  O> csv:to-file "incomplete.csv" [[1 2 3] 4 [5 6 7]] => ERROR Extension exception: Writing directly to a file is not supported in NetLogo Web.  Instead you can use the SendTo extension to download a text file of the user's choice.\n\nsend-to:file "output.csv" csv:to-string [[0 1 true "hello"][1 10 false "goodbye"][2 5 true "..."]]
